#pragma once

#include <GL/glew.h>
#include <vector>

#if COLOR
const std::vector<GLfloat> cube_vertex_color_data{
    // face Up
    // tri1
    1, 0, 0, //
    1, 0, 0, //
    1, 0, 0, //
    // tri2
    0.5, 0, 0, //
    0.5, 0, 0, //
    0.5, 0, 0, //

    // face Down
    // tri1
    0, 0, 1, //
    0, 0, 1, //
    0, 0, 1, //
    // tri2
    0, 0, 0.5, //
    0, 0, 0.5, //
    0, 0, 0.5, //

    // face West
    // tri1
    0, 1, 0, //
    0, 1, 0, //
    0, 1, 0, //
    // tri2
    0, 0.5, 0, //
    0, 0.5, 0, //
    0, 0.5, 0, //

    // face East
    // tri1
    1, 1, 0, //
    1, 1, 0, //
    1, 1, 0, //
    // tri2
    0.5, 0.5, 0, //
    0.5, 0.5, 0, //
    0.5, 0.5, 0, //

    // face North
    // tri1
    1, 0, 1, //
    1, 0, 1, //
    1, 0, 1, //
    // tri2
    0.5, 0, 0.5, //
    0.5, 0, 0.5, //
    0.5, 0, 0.5, //

    // face South
    // tri1
    0, 1, 1, //
    0, 1, 1, //
    0, 1, 1, //
    // tri2
    0, 0.5, 0.5, //
    0, 0.5, 0.5, //
    0, 0.5, 0.5, //

    // North plane
    // tri1
    0.7, 0.7, 0.7, //
    0.7, 0.7, 0.7, //
    0.7, 0.7, 0.7, //
    // tri2
    0.3, 0.3, 0.3, //
    0.3, 0.3, 0.3, //
    0.3, 0.3, 0.3, //
};
#endif // COLOR
const std::vector<GLfloat> cube_vertex_position_data{
    // face Up
    // tri1
    1.0, 1.0, 1.0, // v8
    -1.0, 1.0, 1.0, // v7
    1.0, -1.0, 1.0, // v6
    // tri2
    1.0, -1.0, 1.0, // v6
    -1.0, 1.0, 1.0, // v7
    -1.0, -1.0, 1.0, // v5

    // face Down
    // tri1
    1.0, -1.0, -1.0, // v2
    -1.0, 1.0, -1.0, // v3
    1.0, 1.0, -1.0, // v4
    // tri2
    -1.0, 1.0, -1.0, // v3
    1.0, -1.0, -1.0, // v2
    -1.0, -1.0, -1.0, // v1

    // face West
    // tri1
    -1.0, 1.0, 1.0, // v7
    1.0, 1.0, 1.0, // v8
    1.0, 1.0, -1.0, // v4
    // tri2
    -1.0, 1.0, 1.0, // v7
    1.0, 1.0, -1.0, // v4
    -1.0, 1.0, -1.0, // v3

    // face East
    // tri1
    1.0, -1.0, -1.0, // v2
    1.0, -1.0, 1.0, // v6
    -1.0, -1.0, 1.0, // v5
    // tri2
    -1.0, -1.0, -1.0, // v1
    1.0, -1.0, -1.0, // v2
    -1.0, -1.0, 1.0, // v5

    // face North
    // tri1
    1.0, -1.0, -1.0, // v1
    1.0, 1.0, 1.0, // v7
    1.0, -1.0, 1.0, // v6
    // tri2
    1.0, -1.0, -1.0, // v1
    1.0, 1.0, -1.0, // v3
    1.0, 1.0, 1.0, // v7

    // face South
    // tri1
    -1.0, -1.0, 1.0, // v5
    -1.0, 1.0, 1.0, // v7
    -1.0, -1.0, -1.0, // v1
    // tri2
    -1.0, 1.0, -1.0, // v3
    -1.0, -1.0, -1.0, // v1
    -1.0, 1.0, 1.0, // v7
};

const std::vector<GLfloat> plane_vertex_position_data{
    // tri1
    0.0, -1.0, 2.0, // v1
    0.0, 1.0, 4.0, // v2
    0.0, -1.0, 4.0, // v3
    // tri2
    0.0, -1.0, 2.0, // v1
    0.0, 1.0, 2.0, // v4
    0.0, 1.0, 4.0, // v2
};

const std::vector<GLfloat> plane_uv_data{
    // tri 1
    0.0, 0.0, // v1
    1.0, 1.0, // v2
    0.0, 1.0, // v3

    // tri 2
    0.0, 0.0, // v1
    1.0, 0.0, // v4
    1.0, 1.0 // v2
};

/* to make a plane:
 *  (0, 1) A---------B (1, 1)
 *         |       _/|
 *         |    __/  |
 *         |  _/     |
 *         |_/       |
 *  (0, 0) C---------D (1, 0)
 *
 *  trangle vertices should be sent in counter-clockwise order,
 * buffer should look like:
 * C
 * B
 * A
 *
 * C
 * D
 * B
 */